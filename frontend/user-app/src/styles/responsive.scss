/**
 * 响应式样式
 * 定义不同屏幕尺寸下的样式适配
 */

@use "sass:map";
@use "sass:math";

/* ==================== 断点定义 ==================== */

$breakpoints: (
  xs: 320px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1600px
);

/* 响应式混入 */
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

@mixin respond-between($min, $max) {
  @if map.has-key($breakpoints, $min) and map.has-key($breakpoints, $max) {
    @media (min-width: map.get($breakpoints, $min)) and (max-width: calc(#{map.get($breakpoints, $max)} - 1px)) {
      @content;
    }
  }
}

@mixin respond-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: calc(#{map.get($breakpoints, $breakpoint)} - 1px)) {
      @content;
    }
  }
}

/* ==================== 容器样式 ==================== */

.container {
  width: 100%;
  padding: 0 var(--spacing-base);
  margin: 0 auto;
  
  @include respond-to(sm) {
    max-width: 540px;
  }
  
  @include respond-to(md) {
    max-width: 720px;
    padding: 0 var(--spacing-lg);
  }
  
  @include respond-to(lg) {
    max-width: 960px;
  }
  
  @include respond-to(xl) {
    max-width: 1140px;
  }
  
  @include respond-to(xxl) {
    max-width: 1320px;
  }
}

.container-fluid {
  width: 100%;
  padding: 0 var(--spacing-base);
  
  @include respond-to(md) {
    padding: 0 var(--spacing-lg);
  }
}

/* ==================== 栅格系统 ==================== */

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 calc(var(--spacing-base) / -2);
}

.col {
  flex: 1;
  padding: 0 calc(var(--spacing-base) / 2);
}

// 生成栅格类
@for $i from 1 through 12 {
  .col-#{$i} {
    flex: 0 0 math.percentage(math.div($i, 12));
    max-width: math.percentage(math.div($i, 12));
    padding: 0 calc(var(--spacing-base) / 2);
  }
}

// 响应式栅格
@each $breakpoint, $width in $breakpoints {
  @include respond-to($breakpoint) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        flex: 0 0 math.percentage(math.div($i, 12));
        max-width: math.percentage(math.div($i, 12));
      }
    }
    
    .col-#{$breakpoint} {
      flex: 1;
    }
    
    .col-#{$breakpoint}-auto {
      flex: 0 0 auto;
      width: auto;
    }
  }
}

/* ==================== 显示/隐藏工具类 ==================== */

// 在不同断点下显示
@each $breakpoint, $width in $breakpoints {
  @include respond-to($breakpoint) {
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
    .d-#{$breakpoint}-none { display: none !important; }
  }
}

// 在不同断点下隐藏
@each $breakpoint, $width in $breakpoints {
  @include respond-down($breakpoint) {
    .d-#{$breakpoint}-down-none { display: none !important; }
  }
}

/* ==================== 文字对齐 ==================== */

@each $breakpoint, $width in $breakpoints {
  @include respond-to($breakpoint) {
    .text-#{$breakpoint}-left { text-align: left !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-right { text-align: right !important; }
  }
}

/* ==================== 间距工具类 ==================== */

$spacings: (
  0: 0,
  xs: var(--spacing-xs),
  sm: var(--spacing-sm),
  md: var(--spacing-md),
  base: var(--spacing-base),
  lg: var(--spacing-lg),
  xl: var(--spacing-xl),
  xxl: var(--spacing-xxl)
);

@each $breakpoint, $width in $breakpoints {
  @include respond-to($breakpoint) {
    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacings {
        .#{$abbrev}-#{$breakpoint}-#{$size} { #{$prop}: #{$length} !important; }
        .#{$abbrev}t-#{$breakpoint}-#{$size} { #{$prop}-top: #{$length} !important; }
        .#{$abbrev}r-#{$breakpoint}-#{$size} { #{$prop}-right: #{$length} !important; }
        .#{$abbrev}b-#{$breakpoint}-#{$size} { #{$prop}-bottom: #{$length} !important; }
        .#{$abbrev}l-#{$breakpoint}-#{$size} { #{$prop}-left: #{$length} !important; }
        .#{$abbrev}x-#{$breakpoint}-#{$size} {
          #{$prop}-left: #{$length} !important;
          #{$prop}-right: #{$length} !important;
        }
        .#{$abbrev}y-#{$breakpoint}-#{$size} {
          #{$prop}-top: #{$length} !important;
          #{$prop}-bottom: #{$length} !important;
        }
      }
    }
  }
}

/* ==================== Flex工具类 ==================== */

@each $breakpoint, $width in $breakpoints {
  @include respond-to($breakpoint) {
    .flex-#{$breakpoint}-row { flex-direction: row !important; }
    .flex-#{$breakpoint}-column { flex-direction: column !important; }
    .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
    .flex-#{$breakpoint}-column-reverse { flex-direction: column-reverse !important; }
    
    .flex-#{$breakpoint}-wrap { flex-wrap: wrap !important; }
    .flex-#{$breakpoint}-nowrap { flex-wrap: nowrap !important; }
    .flex-#{$breakpoint}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    
    .justify-content-#{$breakpoint}-start { justify-content: flex-start !important; }
    .justify-content-#{$breakpoint}-end { justify-content: flex-end !important; }
    .justify-content-#{$breakpoint}-center { justify-content: center !important; }
    .justify-content-#{$breakpoint}-between { justify-content: space-between !important; }
    .justify-content-#{$breakpoint}-around { justify-content: space-around !important; }
    
    .align-items-#{$breakpoint}-start { align-items: flex-start !important; }
    .align-items-#{$breakpoint}-end { align-items: flex-end !important; }
    .align-items-#{$breakpoint}-center { align-items: center !important; }
    .align-items-#{$breakpoint}-baseline { align-items: baseline !important; }
    .align-items-#{$breakpoint}-stretch { align-items: stretch !important; }
  }
}

/* ==================== 组件响应式适配 ==================== */

/* 导航栏响应式 */
.navbar {
  @include respond-to(md) {
    &-content {
      padding: var(--spacing-lg) var(--spacing-xl);
    }
  }
}

/* 卡片响应式 */
.card {
  @include respond-to(sm) {
    margin: var(--spacing-lg);
  }
  
  @include respond-to(md) {
    margin: var(--spacing-xl);
  }
}

/* 商户卡片响应式 */
.store-card {
  @include respond-to(sm) {
    &-header {
      height: 400rpx;
    }
  }
  
  @include respond-to(md) {
    display: flex;
    
    &-header {
      width: 40%;
      height: 300rpx;
    }
    
    &-content {
      width: 60%;
      padding: var(--spacing-lg);
    }
  }
}

/* 商品卡片响应式 */
.product-card {
  @include respond-to(sm) {
    &-horizontal {
      .image {
        width: 200rpx;
        height: 200rpx;
      }
    }
  }
  
  @include respond-to(md) {
    &-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: var(--spacing-base);
    }
  }
  
  @include respond-to(lg) {
    &-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}

/* 列表项响应式 */
.list-item {
  @include respond-to(md) {
    padding: var(--spacing-lg);
    
    &-avatar {
      width: 128rpx;
      height: 128rpx;
    }
    
    &-title {
      font-size: var(--font-size-md);
    }
  }
}

/* 表单响应式 */
.form-container {
  @include respond-to(md) {
    max-width: 600px;
    margin: 0 auto;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-base);
    padding: var(--spacing-xl);
  }
}

.form-item {
  @include respond-to(md) {
    padding: var(--spacing-lg);
    
    &-label {
      width: 240rpx;
    }
  }
}

/* 弹窗响应式 */
.modal {
  @include respond-to(md) {
    &-content {
      max-width: 800rpx;
      margin: var(--spacing-xl);
    }
  }
}

/* TabBar响应式（平板模式） */
.custom-tabbar {
  @include respond-to(md) {
    position: relative;
    width: 120rpx;
    height: 100vh;
    border-top: none;
    border-right: 1rpx solid var(--theme-border-light);
    
    &-content {
      flex-direction: column;
      height: 100%;
      padding-top: var(--spacing-xl);
    }
    
    &-item {
      padding: var(--spacing-lg) 0;
      margin-bottom: var(--spacing-base);
    }
    
    &-text {
      font-size: var(--font-size-xs);
      margin-top: var(--spacing-xs);
    }
  }
}

/* 统计卡片响应式 */
.stat-card {
  @include respond-to(sm) {
    &-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: var(--spacing-base);
    }
  }
  
  @include respond-to(lg) {
    &-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}

/* ==================== 安全区域适配 ==================== */

/* iPhone X+ 系列安全区域 */
.safe-area-inset {
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

.safe-area-inset-top {
  padding-top: env(safe-area-inset-top);
}

.safe-area-inset-bottom {
  padding-bottom: env(safe-area-inset-bottom);
}

.safe-area-inset-left {
  padding-left: env(safe-area-inset-left);
}

.safe-area-inset-right {
  padding-right: env(safe-area-inset-right);
}

/* 状态栏高度适配 */
.status-bar-height {
  height: var(--status-bar-height);
}

/* 导航栏高度适配 */
.navigation-bar-height {
  height: var(--navigation-bar-height);
}

/* TabBar高度适配 */
.tab-bar-height {
  height: calc(100rpx + env(safe-area-inset-bottom));
}

/* ==================== 横屏适配 ==================== */

@media (orientation: landscape) {
  .landscape-hidden {
    display: none !important;
  }
  
  .custom-tabbar {
    display: none;
  }
  
  .modal-content {
    max-height: 90vh;
    max-width: 90vw;
  }
  
  .action-sheet {
    max-height: 60vh;
  }
}

@media (orientation: portrait) {
  .portrait-hidden {
    display: none !important;
  }
}

/* ==================== 高分辨率屏幕适配 ==================== */

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .high-dpi {
    .border-1px {
      border-width: 0.5px;
    }
  }
}

/* ==================== 深色模式适配 ==================== */

@media (prefers-color-scheme: dark) {
  :root {
    --theme-text-primary: #ffffff;
    --theme-text-regular: #e6e6e6;
    --theme-text-secondary: #cccccc;
    --theme-text-placeholder: #999999;
    --theme-text-disabled: #666666;
    --theme-text-white: #000000;
    
    --theme-bg-primary: #1a1a1a;
    --theme-bg-secondary: #262626;
    --theme-bg-tertiary: #333333;
    --theme-bg-dark: #ffffff;
    
    --theme-border-light: #333333;
    --theme-border-base: #404040;
    --theme-border-dark: #4d4d4d;
    --theme-border-darker: #666666;
    
    --theme-divider: #333333;
    --theme-divider-dark: #404040;
  }
  
  .card {
    box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.3);
  }
  
  .modal-content {
    box-shadow: 0 16rpx 64rpx rgba(0, 0, 0, 0.5);
  }
}

/* 强制深色模式类 */
.dark-mode {
  --theme-text-primary: #ffffff;
  --theme-text-regular: #e6e6e6;
  --theme-text-secondary: #cccccc;
  --theme-text-placeholder: #999999;
  --theme-text-disabled: #666666;
  --theme-text-white: #000000;
  
  --theme-bg-primary: #1a1a1a;
  --theme-bg-secondary: #262626;
  --theme-bg-tertiary: #333333;
  --theme-bg-dark: #ffffff;
  
  --theme-border-light: #333333;
  --theme-border-base: #404040;
  --theme-border-dark: #4d4d4d;
  --theme-border-darker: #666666;
  
  --theme-divider: #333333;
  --theme-divider-dark: #404040;
  
  .card {
    box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.3);
  }
  
  .modal-content {
    box-shadow: 0 16rpx 64rpx rgba(0, 0, 0, 0.5);
  }
}

/* ==================== 无障碍访问适配 ==================== */

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

@media (prefers-reduced-transparency: reduce) {
  .glass-morphism {
    backdrop-filter: none;
    background: var(--theme-bg-primary);
  }
}

/* 高对比度模式 */
@media (prefers-contrast: high) {
  :root {
    --theme-border-light: #000000;
    --theme-border-base: #000000;
    --theme-text-secondary: #000000;
    --theme-text-placeholder: #333333;
  }
  
  .theme-button {
    border: 2rpx solid currentColor;
  }
  
  .input {
    border-width: 2rpx;
  }
}

/* ==================== 打印样式 ==================== */

@media print {
  .no-print {
    display: none !important;
  }
  
  .custom-tabbar,
  .navbar,
  .modal,
  .action-sheet,
  .toast,
  .notification {
    display: none !important;
  }
  
  body {
    background: white !important;
    color: black !important;
  }
  
  .card {
    box-shadow: none !important;
    border: 1px solid #ccc !important;
  }
}